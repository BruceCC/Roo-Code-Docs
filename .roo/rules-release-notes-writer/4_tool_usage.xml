  <tool_usage_guide>
  <overview>
    Guidance for using GitHub MCP and file tools for creating release notes.
  </overview>

  <github_tools>
    <tool name="github.get_tag">
      <purpose>Fetch release date for a version tag.</purpose>
      <usage><![CDATA[
<use_mcp_tool>
<server_name>github</server_name>
<tool_name>get_tag</tool_name>
<arguments>{ "owner": "RooCodeInc", "repo": "Roo-Code", "tag": "v3.20.3" }</arguments>
</use_mcp_tool>
      ]]></usage>
      <output>Returns commit date for the tag to set the PR search range.</output>
    </tool>

    <tool name="github.search_issues">
      <purpose>Get all merged PRs between two dates.</purpose>
      <usage><![CDATA[
<use_mcp_tool>
<server_name>github</server_name>
<tool_name>search_issues</tool_name>
<arguments>{ "owner": "RooCodeInc", "repo": "Roo-Code", "q": "is:pr is:merged repo:RooCodeInc/Roo-Code merged:2025-01-10..2025-01-13" }</arguments>
</use_mcp_tool>
      ]]></usage>
      <parsing_tip>Extract PR numbers from the results list.</parsing_tip>
    </tool>

    <tool name="github.get_pull_request">
      <purpose>Get details for a specific PR.</purpose>
      <usage><![CDATA[
<use_mcp_tool>
<server_name>github</server_name>
<tool_name>get_pull_request</tool_name>
<arguments>{ "owner": "RooCodeInc", "repo": "Roo-Code", "pull_number": 1234 }</arguments>
</use_mcp_tool>
      ]]></usage>
      <extract>
        <field>title</field>
        <field>user.login (author)</field>
        <field>body</field>
      </extract>
    </tool>

    <tool name="github.get_pull_request_files">
      <purpose>See which files changed in a PR.</purpose>
      <usage><![CDATA[
<use_mcp_tool>
<server_name>github</server_name>
<tool_name>get_pull_request_files</tool_name>
<arguments>{ "owner": "RooCodeInc", "repo": "Roo-Code", "pull_number": 1234 }</arguments>
</use_mcp_tool>
      ]]></usage>
      <analysis>
        Use file paths to understand change scope (e.g., src/extension/* for core, webview-ui/* for UI).
      </analysis>
    </tool>

    <tool name="github.get_pull_request_diff">
      <purpose>Get code changes for deeper analysis.</purpose>
      <when_to_use>When PR title/description is unclear.</when_to_use>
    </tool>

    <tool name="github.get_issue">
      <purpose>Get details for linked issues to acknowledge all contributors.</purpose>
      <usage><![CDATA[
<use_mcp_tool>
<server_name>github</server_name>
<tool_name>get_issue</tool_name>
<arguments>{ "owner": "RooCodeInc", "repo": "Roo-Code", "issue_number": 987 }</arguments>
</use_mcp_tool>
      ]]></usage>
      <extract>
        <field>title</field>
        <field>user.login (reporter)</field>
        <field>body</field>
      </extract>
      <issue_extraction_patterns>
        <description>Find linked issues in PR descriptions with these patterns:</description>
        <pattern>Fixes #123</pattern>
        <pattern>Closes #456</pattern>
        <pattern>Resolves #789</pattern>
        <pattern>#123</pattern>
      </issue_extraction_patterns>
    </tool>
  </github_tools>

  <subtask_tools>
    <tool name="new_task">
      <purpose>Create subtasks for processing individual PRs.</purpose>
      <when_to_use>When processing multiple PRs, create one subtask per PR.</when_to_use>
      <parameters>
        <parameter name="mode">"release-notes-writer"</parameter>
        <parameter name="message">Structured message with PR number and version.</parameter>
      </parameters>
      <usage><![CDATA[
<new_task>
<mode>release-notes-writer</mode>
<message>Investigate PR #1234 for release notes v3.20.3.

Task:
1. Get PR details (github.get_pull_request)
2. Extract linked issues from description
3. Get issue details (github.get_issue)
4. Analyze and categorize change
5. Write findings to temp_pr_analysis.md in the required format. Use insert_content with line 0.
</message>
</new_task>
      ]]></usage>
    </tool>
    
    <tool name="new_task">
      <purpose>Create a subtask for Discord formatting.</purpose>
      <when_to_use>When user requests Discord formatting.</when_to_use>
      <parameters>
        <parameter name="mode">"release-notes-writer"</parameter>
        <parameter name="message">Structured message with version and formatting rules.</parameter>
      </parameters>
      <usage><![CDATA[
<new_task>
<mode>release-notes-writer</mode>
<message>Generate Discord-formatted release notes for version X.Y.Z.

Requirements:
1. Strip PR links and numbers.
2. Keep structure and content.
3. Prepend https://docs.roocode.com/ to internal links.
4. If compressing, summarize and thank contributors from those sections.
5. Add footer with link to full release notes.

Convert docs/update-notes/vX.Y.Z.mdx.
</message>
</new_task>
      ]]></usage>
    </tool>
  </subtask_tools>

  <file_tools>
    <tool name="list_files">
      <purpose>Find previous version files.</purpose>
      <usage><![CDATA[
<list_files>
<path>docs/update-notes</path>
<recursive>false</recursive>
</list_files>
      ]]></usage>
      <parsing>Find most recent vX.Y.Z.mdx file to determine previous version.</parsing>
    </tool>

    <tool name="write_to_file">
      <purpose>Create new release notes and temporary analysis files.</purpose>
      <uses>
        <use>Create docs/update-notes/vX.Y.Z.mdx</use>
        <use>Create temp_pr_analysis.md</use>
      </uses>
    </tool>

    <tool name="insert_content">
      <purpose>Append PR analysis to temporary file.</purpose>
      <usage><![CDATA[
<insert_content>
<path>temp_pr_analysis.md</path>
<line>0</line>
<content>
## PR #1234: Fix context condensing
**Author**: john-doe
**Linked Issues**: #987 (reporter: bug-reporter)
**Category**: Bug Fix
**User Impact**: Fixed context condensing errors with large files.
**Contributors**: john-doe, bug-reporter

---
</content>
</insert_content>
      ]]></usage>
      <when_to_use>After analyzing a PR, append findings to the temp file.</when_to_use>
    </tool>

    <tool name="read_file">
      <purpose>Read existing files for updates.</purpose>
      <files_to_read>
        <file>docs/update-notes/index.md</file>
        <file>sidebars.ts</file>
        <file>docs/update-notes/vX.Y.mdx (for combined notes)</file>
        <file>temp_pr_analysis.md</file>
      </files_to_read>
    </tool>

    <tool name="apply_diff">
      <purpose>Update existing files.</purpose>
      <usage><![CDATA[
<apply_diff>
<path>docs/update-notes/index.md</path>
<diff>
<<<<<<< SEARCH
:start_line:X
-------
## Release Notes

### 2025
=======
## Release Notes

### 2025

- [3.20.3](/update-notes/v3.20.3) (2025-01-13)
>>>>>>> REPLACE
</diff>
</apply_diff>
      ]]></usage>
    </tool>
  </file_tools>

  <workflow_optimization>
    <tip priority="high">
      <description>Use subtasks for PR processing for better organization and error isolation.</description>
    </tip>
    <tip priority="high">
      <description>Use a temporary file (e.g., temp_pr_analysis.md) with a consistent format for easy parsing.</description>
    </tip>
    <tip priority="high">
      <description>Track all contributors (PR author and issue reporters).</description>
    </tip>
  </workflow_optimization>

  <error_handling>
    <scenario>
      <error>PR not found/access denied</error>
      <action>Skip PR and note in comments.</action>
    </scenario>
    <scenario>
      <error>Tag not found</error>
      <action>Ask user to verify version number.</action>
    </scenario>
    <scenario>
      <error>File already exists</error>
      <action>Ask user to overwrite.</action>
    </scenario>
  </error_handling>
</tool_usage_guide>