<discord_only_workflow_instructions>
  <overview>
    Specialized workflow for generating Discord-formatted release notes from existing release files.
    This allows users to quickly get Discord-ready announcements without creating release notes from scratch.
  </overview>

  <entry_patterns>
    <description>
      User messages that trigger the Discord-only workflow
    </description>
    <patterns>
      <pattern>Discord release notes for X.Y.Z</pattern>
      <pattern>Generate Discord format for vX.Y.Z</pattern>
      <pattern>Discord announcement for X.Y.Z, A.B.C, D.E.F</pattern>
      <pattern>Discord notes for v3.23.14</pattern>
      <pattern>Discord release notes for 3.23.14, 3.23.15</pattern>
    </patterns>
  </entry_patterns>

  <workflow_steps>
    <step number="1">
      <title>Parse Version Numbers</title>
      <action>Extract version numbers from user request</action>
      <details>
        Support multiple formats:
        - Single version: "3.23.14" or "v3.23.14"
        - Multiple versions: "3.23.14, 3.23.15, 3.23.16"
        - Mixed formats: "v3.23.14, 3.23.15, v3.23.16"
      </details>
      <parsing_rules>
        <rule>Strip 'v' prefix if present</rule>
        <rule>Split by commas for multiple versions</rule>
        <rule>Trim whitespace</rule>
        <rule>Validate version format (X.Y.Z)</rule>
      </parsing_rules>
    </step>

    <step number="2">
      <title>Check File Existence</title>
      <action>Verify release notes files exist</action>
      <tool>list_files</tool>
      <details>
        Check docs/update-notes/ for each requested version file (vX.Y.Z.mdx)
      </details>
      <error_handling>
        <missing_files>
          <action>Report which versions are missing</action>
          <example><![CDATA[
<ask_followup_question>
<question>I couldn't find release notes for the following versions: v3.23.16, v3.23.17. Would you like me to:</question>
<follow_up>
<suggest>Generate Discord notes for the versions that exist (3.23.14, 3.23.15)</suggest>
<suggest mode="release-notes-writer">Create release notes for v3.23.16 first</suggest>
<suggest>Cancel this request</suggest>
</follow_up>
</ask_followup_question>
          ]]></example>
        </missing_files>
      </error_handling>
    </step>

    <step number="3">
      <title>Process Each Version</title>
      <action>Generate Discord format for each existing version</action>
      <substeps>
        <substep number="1">
          <action>Read release notes file</action>
          <tool>read_file</tool>
          <file>docs/update-notes/vX.Y.Z.mdx</file>
        </substep>
        <substep number="2">
          <action>Apply Discord transformations</action>
          <transformations>
            <transform>Remove frontmatter</transform>
            <transform>Strip PR links and numbers</transform>
            <transform>Convert internal links to full URLs</transform>
            <transform>Preserve emoji and formatting</transform>
            <transform>Add version-specific footer</transform>
          </transformations>
        </substep>
        <substep number="3">
          <action>Handle special requests</action>
          <options>
            <option name="compression">
              <trigger>User mentions "compress" or "summarize"</trigger>
              <action>Compress minor sections into summary</action>
            </option>
            <option name="highlights_only">
              <trigger>User mentions "highlights" or "major features"</trigger>
              <action>Include only major features and important fixes</action>
            </option>
          </options>
        </substep>
      </substeps>
    </step>

    <step number="4">
      <title>Format Output</title>
      <action>Present Discord-ready text</action>
      <single_version_format><![CDATA[
# Roo Code X.Y.Z Release Notes

[Summary sentence from original]

## [Major Feature Name]

[Feature description without PR links]

## Bug Fixes

* **[Fix Name]**: [Description] (thanks [contributors]!)
* **[Another Fix]**: [Description] (thanks [contributors]!)

[Full X.Y.Z Release Notes](https://docs.roocode.com/update-notes/vX.Y.Z)
      ]]></single_version_format>
      <multiple_versions_format><![CDATA[
# Roo Code Release Notes

## Version X.Y.Z

[Summary and key changes]

## Version A.B.C

[Summary and key changes]

---
Full release notes:
- [X.Y.Z Release Notes](https://docs.roocode.com/update-notes/vX.Y.Z)
- [A.B.C Release Notes](https://docs.roocode.com/update-notes/vA.B.C)
      ]]></multiple_versions_format>
    </step>

    <step number="5">
      <title>Provide Copy Instructions</title>
      <action>Give user the formatted text with copy guidance</action>
      <completion_message>
        Here's the Discord-formatted release notes. You can copy and paste this directly into Discord.
        
        [Include formatted text in a code block for easy copying]
      </completion_message>
    </step>
  </workflow_steps>

  <implementation_details>
    <detail name="no_file_creation">
      <description>This workflow does not create or modify any files</description>
      <reason>It only reads existing files and outputs formatted text</reason>
    </detail>
    <detail name="no_github_api">
      <description>No GitHub API calls are needed</description>
      <reason>All information comes from existing release note files</reason>
    </detail>
    <detail name="immediate_response">
      <description>Workflow completes quickly without subtasks</description>
      <reason>Simple file reading and text transformation</reason>
    </detail>
  </implementation_details>

  <examples>
    <example name="single_version">
      <user_request>Discord release notes for 3.23.14</user_request>
      <workflow>
        1. Parse version: 3.23.14
        2. Check file exists: docs/update-notes/v3.23.14.mdx ✓
        3. Read file and transform
        4. Output Discord-formatted text
      </workflow>
    </example>

    <example name="multiple_versions">
      <user_request>Generate Discord announcement for v3.23.14, v3.23.15, v3.23.16</user_request>
      <workflow>
        1. Parse versions: 3.23.14, 3.23.15, 3.23.16
        2. Check files: v3.23.14.mdx ✓, v3.23.15.mdx ✓, v3.23.16.mdx ✗
        3. Ask user how to proceed with missing v3.23.16
        4. Process existing versions
        5. Output combined Discord announcement
      </workflow>
    </example>

    <example name="with_compression">
      <user_request>Discord notes for 3.23.14, compress the minor fixes</user_request>
      <workflow>
        1. Parse version and compression request
        2. Check file exists
        3. Read and transform with compression
        4. Output condensed Discord format
      </workflow>
    </example>
  </examples>

  <error_scenarios>
    <scenario name="no_versions_found">
      <trigger>User provides version numbers but no files exist</trigger>
      <response>Explain that no release notes exist and offer to create them</response>
    </scenario>
    <scenario name="invalid_version_format">
      <trigger>User provides invalid version format (e.g., "3.23" without patch)</trigger>
      <response>Ask for clarification on the full version number</response>
    </scenario>
    <scenario name="ambiguous_request">
      <trigger>Unclear if user wants Discord format or full release notes</trigger>
      <response>Ask for clarification with suggested options</response>
    </scenario>
  </error_scenarios>
</discord_only_workflow_instructions>